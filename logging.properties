# Copyright 2013,2014 os-cillation GmbH
#
# easyFPGA is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# easyFPGA is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with easyFPGA.  If not, see <http://www.gnu.org/licenses/>.

# Global logging properties. 
# ------------------------------------------ 
# The set of handlers to be loaded upon startup. 
# Comma-separated list of class names. 
# (? LogManager docs say no comma here, but JDK example has comma.) 
handlers=java.util.logging.FileHandler

# Default global logging level. 
# Loggers and Handlers may override this level 
.level=ALL

# Loggers 
# ------------------------------------------ 
# Loggers are usually attached to packages. 
# Here, the level for each package is specified. 
# The global level is used by default, so levels 
# specified here simply act as an override. 
easyfpga.communicator=ALL

# File handler
# -----------------------------------------

# --- FileHandler --- 
# Override of global logging level 
java.util.logging.FileHandler.level=ALL

# Naming style for the output file: 
# (The output file is placed in the directory 
# defined by the "user.home" System property.) 
java.util.logging.FileHandler.pattern=%h/tmp/log/java%u.log

# Limiting size of output file in bytes: 
java.util.logging.FileHandler.limit=1000000

# Number of output files to cycle through, by appending an 
# integer to the base file name: 
java.util.logging.FileHandler.count=100
java.util.logging.FileHandler.append=true

# SimpleFormatter
java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter